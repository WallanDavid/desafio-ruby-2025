name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: email_ingestor_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.9
        bundler-cache: true

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: |
        bundle install --jobs 4 --retry 3
        npm install

    - name: Set up database
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/email_ingestor_test
        REDIS_URL: redis://localhost:6379/0
        RAILS_ENV: test
      run: |
        bundle exec rails db:prepare

    - name: Run linter
      run: bundle exec rubocop

    - name: Run tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/email_ingestor_test
        REDIS_URL: redis://localhost:6379/0
        RAILS_ENV: test
      run: bundle exec rspec

  lint:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: 3.2.9
        bundler-cache: true

    - name: Run Rubocop
      run: bundle exec rubocop
